// Generated by view binder compiler. Do not edit!
package com.example.sandbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sandbox.R;
import idp.android.view.BottomBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutScreenViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bReset;

  @NonNull
  public final BottomBar bottomBar;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final TextView tvScreenTitle;

  private LayoutScreenViewBinding(@NonNull ConstraintLayout rootView, @NonNull Button bReset,
      @NonNull BottomBar bottomBar, @NonNull Guideline guideline, @NonNull TextView tvScreenTitle) {
    this.rootView = rootView;
    this.bReset = bReset;
    this.bottomBar = bottomBar;
    this.guideline = guideline;
    this.tvScreenTitle = tvScreenTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutScreenViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutScreenViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_screen_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutScreenViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b_reset;
      Button bReset = ViewBindings.findChildViewById(rootView, id);
      if (bReset == null) {
        break missingId;
      }

      id = R.id.bottom_bar;
      BottomBar bottomBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomBar == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.tv_screen_title;
      TextView tvScreenTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvScreenTitle == null) {
        break missingId;
      }

      return new LayoutScreenViewBinding((ConstraintLayout) rootView, bReset, bottomBar, guideline,
          tvScreenTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
